{"version":3,"sources":["pages/registerPage/RegisterPage.module.css","pages/registerPage/RegisterPage.js"],"names":["module","exports","RegisterPage","state","name","email","password","handleChange","target","value","setState","handleSubmit","e","preventDefault","props","onRegister","this","className","styles","container","onSubmit","form","autoComplete","label","input","type","placeholder","onChange","button","Component","mapDispatchToProps","authOperations","register","connect"],"mappings":"yHACAA,EAAOC,QAAU,CAAC,UAAY,gCAAgC,KAAO,2BAA2B,MAAQ,4BAA4B,MAAQ,4BAA4B,OAAS,+B,kICI3KC,E,4MACJC,MAAQ,CACNC,KAAM,GACNC,MAAO,GACPC,SAAU,I,EAGZC,aAAe,YAAkC,IAAD,IAA9BC,OAAUJ,EAAoB,EAApBA,KAAMK,EAAc,EAAdA,MAChC,EAAKC,SAAL,eAAiBN,EAAOK,K,EAG1BE,aAAe,SAACC,GACdA,EAAEC,iBAEF,EAAKC,MAAMC,WAAW,EAAKZ,OAE3B,EAAKO,SAAS,CAAEN,KAAM,GAAIC,MAAO,GAAIC,SAAU,M,4CAGjD,WAAU,IAAD,EAC2BU,KAAKb,MAA/BC,EADD,EACCA,KAAMC,EADP,EACOA,MAAOC,EADd,EACcA,SACrB,OACE,sBAAKW,UAAWC,IAAOC,UAAvB,UACE,mDAEA,uBACEC,SAAUJ,KAAKL,aACfM,UAAWC,IAAOG,KAClBC,aAAa,MAHf,UAKE,wBAAOL,UAAWC,IAAOK,MAAzB,kBAEE,uBACEN,UAAWC,IAAOM,MAClBC,KAAK,OACLrB,KAAK,OACLsB,YAAY,aACZjB,MAAOL,EACPuB,SAAUX,KAAKT,kBAInB,wBAAOU,UAAWC,IAAOK,MAAzB,oBAEE,uBACEN,UAAWC,IAAOM,MAClBC,KAAK,QACLrB,KAAK,QACLsB,YAAY,eACZjB,MAAOJ,EACPsB,SAAUX,KAAKT,kBAInB,wBAAOU,UAAWC,IAAOK,MAAzB,sBAEE,uBACEN,UAAWC,IAAOM,MAClBC,KAAK,WACLrB,KAAK,WACLsB,YAAY,iBACZjB,MAAOH,EACPqB,SAAUX,KAAKT,kBAInB,wBAAQU,UAAWC,IAAOU,OAAQH,KAAK,SAAvC,+B,GAlEiBI,aA2ErBC,EAAqB,CACzBf,WAAYgB,IAAeC,UAOdC,sBAAQ,KAAMH,EAAdG,CAAkC/B","file":"static/js/Register-Page.daa495ac.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"RegisterPage_container__2AqOL\",\"form\":\"RegisterPage_form__Yfo-Y\",\"label\":\"RegisterPage_label__2ZylT\",\"input\":\"RegisterPage_input__hQEcT\",\"button\":\"RegisterPage_button__EFjPM\"};","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport styles from \"../registerPage/RegisterPage.module.css\";\nimport { authOperations } from \"../../redux/auth\";\n\nclass RegisterPage extends Component {\n  state = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n  };\n\n  handleChange = ({ target: { name, value } }) => {\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n\n    this.props.onRegister(this.state);\n\n    this.setState({ name: \"\", email: \"\", password: \"\" });\n  };\n\n  render() {\n    const { name, email, password } = this.state;\n    return (\n      <div className={styles.container}>\n        <h1>Registration Form</h1>\n\n        <form\n          onSubmit={this.handleSubmit}\n          className={styles.form}\n          autoComplete=\"off\"\n        >\n          <label className={styles.label}>\n            Name:\n            <input\n              className={styles.input}\n              type=\"text\"\n              name=\"name\"\n              placeholder=\"enter name\"\n              value={name}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <label className={styles.label}>\n            E-mail:\n            <input\n              className={styles.input}\n              type=\"email\"\n              name=\"email\"\n              placeholder=\"enter e-mail\"\n              value={email}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <label className={styles.label}>\n            Password:\n            <input\n              className={styles.input}\n              type=\"password\"\n              name=\"password\"\n              placeholder=\"enter password\"\n              value={password}\n              onChange={this.handleChange}\n            />\n          </label>\n\n          <button className={styles.button} type=\"submit\">\n            Sign In\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n// abbreviated notation mapDispatchToProps\nconst mapDispatchToProps = {\n  onRegister: authOperations.register,\n};\n\n// const mapDispatchToProps = (dispatch) => ({\n//   onRegister: (data) => dispatch(authOperations.register(data)),\n// });\n\nexport default connect(null, mapDispatchToProps)(RegisterPage);\n"],"sourceRoot":""}