{"version":3,"sources":["routes.js","Components/Navigation/Navigation.js","Components/AuthNav/AuthNav.js","Components/UserMenu/UserMenu.js","Components/AppBar/AppBar.js","Components/PrivateRoute.js","Components/PublicRoute.js","Components/Loader/Loader.js","App.js","redux/store.js","index.js","Components/Navigation/Navigation.module.css","Components/AuthNav/AuthNav.module.css","Components/UserMenu/UserMenu.module.css","redux/contacts/contacts-operations.js","redux/contacts/contacts-selectors.js","redux/contacts/contacts-reducer.js","Components/AppBar/AppBar.module.css","Components/Loader/Loader.module.css","redux/contacts/contacts-actions.js","redux/auth/auth-actions.js","redux/auth/auth-operations.js","redux/auth/auth-reducer.js","redux/auth/auth-selectors.js"],"names":["connect","state","isAuthenticated","authSelectors","getIsAuthenticated","to","routes","exact","className","styles","link","activeClassName","activeLink","AuthNav","mapDispatchToProps","onLogout","authOperations","logOut","email","getUserEmail","container","button","type","onClick","header","Component","component","redirectTo","routeProps","render","props","restricted","Loader","Spinner","color","height","width","HomePage","lazy","ContactsPage","RegisterPage","LoginPage","App","this","onGetCurrentUser","fallback","path","getCurrentUser","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","auth","persistReducer","authReducer","contacts","contactsReducer","devTools","process","persistor","persistStore","ReactDOM","StrictMode","loading","document","getElementById","module","exports","fetchContacts","dispatch","fetchContactsRequest","axios","get","then","data","fetchContactsSuccess","catch","error","fetchContactsError","message","addContact","name","number","contact","addContactsRequest","post","addContactsSuccess","addContactsError","deleteFromContacts","contactId","deleteFromContactsRequest","delete","deleteFromContactsSuccess","deleteFromContactsError","getAllContacts","items","getFilter","filter","getLoadingContacts","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","createReducer","payload","id","changeFilter","combineReducers","createAction","registerRequest","registerSuccess","registerError","loginRequest","loginSuccess","loginError","logoutRequest","logoutSuccess","logoutError","getCurrentUserRequest","getCurrentUserSuccess","getCurrentUserError","defaults","baseURL","token","headers","common","Authorization","register","credentials","a","authActions","response","logIn","getState","persistedToken","initialUserState","user","setError"],"mappings":"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","file":"static/js/main.002d99af.chunk.js","sourcesContent":["export default {\n  home: \"/\",\n  contacts: \"/contacts\",\n  register: \"/register\",\n  login: \"/login\",\n};\n","import styles from \"../Navigation/Navigation.module.css\";\nimport React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { authSelectors } from \"../../redux/auth\";\nimport routes from \"../../routes\";\n\nconst Navigation = ({ isAuthenticated }) => (\n  <nav>\n    <NavLink\n      to={routes.home}\n      exact\n      className={styles.link}\n      activeClassName={styles.activeLink}\n    >\n      Home\n    </NavLink>\n\n    {isAuthenticated && (\n      <NavLink\n        to={routes.contacts}\n        exact\n        className={styles.link}\n        activeClassName={styles.activeLink}\n      >\n        Contacts\n      </NavLink>\n    )}\n  </nav>\n);\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(Navigation);\n","import styles from \"../AuthNav/AuthNav.module.css\";\nimport React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport routes from \"../../routes\";\n\nconst AuthNav = () => (\n  <div>\n    <NavLink\n      to={routes.register}\n      exact\n      className={styles.link}\n      activeClassName={styles.activeLink}\n    >\n      Register\n    </NavLink>\n\n    <NavLink\n      to={routes.login}\n      exact\n      className={styles.link}\n      activeClassName={styles.activeLink}\n    >\n      Login\n    </NavLink>\n  </div>\n);\n\nexport default AuthNav;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport styles from \"../UserMenu/UserMenu.module.css\";\n\nimport { authSelectors, authOperations } from \"../../redux/auth\";\n\nconst UserMenu = ({ email, onLogout }) => (\n  <div className={styles.container}>\n    <span className={styles.email}>Welcome: {email}</span>\n    <button className={styles.button} type=\"button\" onClick={onLogout}>\n      Logout\n    </button>\n  </div>\n);\n\nconst mapStateToProps = (state) => ({\n  email: authSelectors.getUserEmail(state),\n});\n\nconst mapDispatchToProps = {\n  onLogout: authOperations.logOut,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UserMenu);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport styles from \"../AppBar/AppBar.module.css\";\nimport Navigation from \"../Navigation/Navigation\";\nimport AuthNav from \"../AuthNav/AuthNav\";\nimport UserMenu from \"../UserMenu/UserMenu\";\nimport { authSelectors } from \"../../redux/auth\";\n\nconst AppBar = ({ isAuthenticated }) => (\n  <header className={styles.header}>\n    <Navigation />\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\n  </header>\n);\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(AppBar);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { authSelectors } from \"../redux/auth\";\n\nconst PrivateRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={(props) =>\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\n    }\n  />\n);\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { authSelectors } from \"../redux/auth\";\n\nconst PublicRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={(props) =>\n      isAuthenticated && routeProps.restricted ? (\n        <Redirect to={redirectTo} />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nconst mapStateToProps = (state) => ({\n  isAuthenticated: authSelectors.getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PublicRoute);\n","import React from \"react\";\nimport Spinner from \"react-loader-spinner\";\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport styles from \"./Loader.module.css\";\n\nconst Loader = () => {\n  return (\n    <Spinner\n      className={styles.Spinner}\n      type=\"Bars\"\n      color={\"#3ab0ff\"}\n      height={80}\n      width={80}\n    />\n  );\n};\n\nexport default Loader;\n","import React, { Component, Suspense, lazy } from \"react\";\nimport { Switch } from \"react-router-dom\";\nimport AppBar from \"./Components/AppBar/AppBar\";\nimport { authOperations } from \"./redux/auth\";\nimport { connect } from \"react-redux\";\nimport PrivateRoute from \"./Components/PrivateRoute\";\nimport PublicRoute from \"./Components/PublicRoute\";\nimport Loader from \"./Components/Loader/Loader\";\nimport routes from \"./routes\";\n\nconst HomePage = lazy(() =>\n  import(\"./pages/homePage/HomePage\" /* webpackChunkName: \"Home-Page\" */)\n);\n\nconst ContactsPage = lazy(() =>\n  import(\n    \"./pages/contactsPage/ContactsPage\" /* webpackChunkName: \"Contacts-Page\" */\n  )\n);\n\nconst RegisterPage = lazy(() =>\n  import(\n    \"./pages/registerPage/RegisterPage\" /* webpackChunkName: \"Register-Page\" */\n  )\n);\n\nconst LoginPage = lazy(() =>\n  import(\"./pages/loginPage/LoginPage\" /* webpackChunkName: \"Login-Page\" */)\n);\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n  }\n\n  render() {\n    return (\n      <>\n        <AppBar />\n        <Suspense fallback={<Loader />}>\n          <Switch>\n            <PublicRoute exact path={routes.home} component={HomePage} />\n\n            <PrivateRoute\n              path={routes.contacts}\n              redirectTo={routes.login}\n              component={ContactsPage}\n            />\n            <PublicRoute\n              path={routes.register}\n              restricted\n              redirectTo={routes.contacts}\n              component={RegisterPage}\n            />\n            <PublicRoute\n              path={routes.login}\n              restricted\n              redirectTo={routes.contacts}\n              component={LoginPage}\n            />\n          </Switch>\n        </Suspense>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onGetCurrentUser: authOperations.getCurrentUser,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n\n// const App = () => (\n//   <>\n//     <AppBar />\n\n//     <Switch>\n//       <Route exact path=\"/\" component={HomePage} />\n//       <Route path=\"/contacts\" component={ContactsPage} />\n//       <Route path=\"/register\" component={RegisterPage} />\n//       <Route path=\"/login\" component={LoginPage} />\n//     </Switch>\n//   </>\n// );\n\n// export default App;\n","import { contactsReducer } from \"./contacts\";\nimport { authReducer } from \"./auth\";\nimport { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from \"redux-persist\";\nimport storage from \"redux-persist/lib/storage\";\nimport logger from \"redux-logger\";\n\n/*Redux Tookit*/\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst authPersistConfig = {\n  key: \"auth\",\n  storage,\n  whitelist: [\"token\"],\n};\n\nconst store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: contactsReducer,\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === \"development\",\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"modern-normalize/modern-normalize.css\";\n\nimport store from \"./redux/store\";\nimport { Provider } from \"react-redux\";\nimport { PersistGate } from \"redux-persist/integration/react\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={\"Loading\"} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"Navigation_link__1MfoW\",\"activeLink\":\"Navigation_activeLink__-9lqZ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"link\":\"AuthNav_link__32esy\",\"activeLink\":\"AuthNav_activeLink__2aP--\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"UserMenu_container__1GauQ\",\"email\":\"UserMenu_email__1b9tT\",\"button\":\"UserMenu_button__5wUjU\"};","import axios from \"axios\";\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactsRequest,\n  addContactsSuccess,\n  addContactsError,\n  deleteFromContactsRequest,\n  deleteFromContactsSuccess,\n  deleteFromContactsError,\n} from \"./contacts-actions\";\n\nconst fetchContacts = () => (dispatch) => {\n  dispatch(fetchContactsRequest());\n\n  axios\n    .get(\"/contacts\")\n    .then(({ data }) => dispatch(fetchContactsSuccess(data)))\n    .catch((error) => dispatch(fetchContactsError(error.message)));\n};\n\nconst addContact = ({ name, number }) => (dispatch) => {\n  const contact = {\n    name,\n    number,\n  };\n\n  dispatch(addContactsRequest());\n\n  axios\n    .post(\"/contacts\", contact)\n    .then(({ data }) => dispatch(addContactsSuccess(data)))\n    .catch((error) => dispatch(addContactsError(error.message)));\n};\n\nconst deleteFromContacts = (contactId) => (dispatch) => {\n  dispatch(deleteFromContactsRequest());\n\n  axios\n    .delete(`contacts/${contactId}`)\n    .then(() => dispatch(deleteFromContactsSuccess(contactId)))\n    .catch((error) => dispatch(deleteFromContactsError(error.message)));\n};\n\n// ===========================================================\n// async Redux / async/await\n\n// const fetchContacts = () => async (dispatch) => {\n//   dispatch(fetchContactsRequest());\n\n//   try {\n//     const { data } = await axios.get(\"/contacts\");\n//     dispatch(fetchContactsSuccess(data));\n//   } catch (error) {\n//     dispatch(fetchContactsError(error));\n//   }\n// };\n\n// const addContact = ({ name, number }) => async (dispatch) => {\n//   const contact = {\n//     name,\n//     number,\n//   };\n\n//   dispatch(addContactsRequest());\n\n//   try {\n//     const { data } = await axios.post(\"/contacts\", contact);\n//     dispatch(addContactsSuccess(data));\n//   } catch (error) {\n//     dispatch(addContactsError(error));\n//   }\n// };\n\n// const deleteFromContacts = (contactId) => async (dispatch) => {\n//   dispatch(deleteFromContactsRequest());\n\n//   try {\n//     await axios.delete(`contacts/${contactId}`);\n//     dispatch(deleteFromContactsSuccess(contactId));\n//   } catch (error) {\n//     dispatch(deleteFromContactsError(error));\n//   }\n// };\n// ===========================================================\n\nexport default { fetchContacts, addContact, deleteFromContacts };\n","import { createSelector } from \"@reduxjs/toolkit\";\n\nconst getLoadingContacts = (state) => state.contacts.loading;\nconst getAllContacts = (state) => state.contacts.items;\nconst getFilter = (state) => state.contacts.filter;\n\n// memoized selector\nconst getVisibleContacts = createSelector(\n  [getAllContacts, getFilter],\n  (contacts, filter) => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(({ name }) =>\n      name.toLowerCase().includes(normalizedFilter)\n    );\n  }\n);\n\nexport default {\n  getLoadingContacts,\n  getAllContacts,\n  getFilter,\n  getVisibleContacts,\n};\n\n// combined selector\n\n// export const getVisibleContacts = (state) => {\n//   const contacts = getAllContacts(state);\n//   const filter = getFilter(state);\n\n//   const normalizedFilter = filter.toLowerCase();\n\n//   return contacts.filter(({ name }) =>\n//     name.toLowerCase().includes(normalizedFilter)\n//   );\n// };\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport {\n  fetchContactsRequest,\n  fetchContactsSuccess,\n  fetchContactsError,\n  addContactsRequest,\n  addContactsSuccess,\n  addContactsError,\n  deleteFromContactsRequest,\n  deleteFromContactsSuccess,\n  deleteFromContactsError,\n  changeFilter,\n} from \"./contacts-actions\";\n\n/*Redux Tookit*/\nconst items = createReducer([], {\n  [fetchContactsSuccess]: (state, { payload }) => payload,\n  [addContactsSuccess]: (state, { payload }) => [...state, payload],\n  [deleteFromContactsSuccess]: (state, { payload }) =>\n    state.filter(({ id }) => id !== payload),\n});\n\nconst loading = createReducer(false, {\n  [fetchContactsRequest]: () => true,\n  [fetchContactsSuccess]: () => false,\n  [fetchContactsError]: () => false,\n  [addContactsRequest]: () => true,\n  [addContactsSuccess]: () => false,\n  [addContactsError]: () => false,\n  [deleteFromContactsRequest]: () => true,\n  [deleteFromContactsSuccess]: () => false,\n  [deleteFromContactsError]: () => false,\n});\n\nconst filter = createReducer(\"\", {\n  [changeFilter]: (state, { payload }) => payload,\n});\n\nconst error = createReducer(null, {});\n\nexport default combineReducers({\n  items,\n  filter,\n  loading,\n  error,\n});\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"AppBar_header__mjMCE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"Spinner\":\"Loader_Spinner__3OrXC\"};","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const fetchContactsRequest = createAction(\n  \"contacts/fetchContactsRequest\"\n);\nexport const fetchContactsSuccess = createAction(\n  \"contacts/fetchContactsSuccess\"\n);\nexport const fetchContactsError = createAction(\"contacts/fetchContactsError\");\n\nexport const addContactsRequest = createAction(\"contacts/addContactsRequest\");\nexport const addContactsSuccess = createAction(\"contacts/addContactsSuccess\");\nexport const addContactsError = createAction(\"contacts/addContactsError\");\n\nexport const deleteFromContactsRequest = createAction(\n  \"contacts/deleteFromContactsRequest\"\n);\nexport const deleteFromContactsSuccess = createAction(\n  \"contacts/deleteFromContactsSuccess\"\n);\nexport const deleteFromContactsError = createAction(\n  \"contacts/deleteFromContactsError\"\n);\n\nexport const changeFilter = createAction(\"contacts/changeFilter\");\n\n/*Redux Tookit*/\n\n// export const addContact = createAction(\"contacts/add\", ({ name, number }) => ({\n//   payload: {\n//     id: uuidv4(),\n//     name,\n//     number,\n//   },\n// }));\n\n// export const deleteFromContacts = createAction(\"contacts/delete\");\n\n// export const changeFilter = createAction(\"contacts/changeFilter\");\n","import { createAction } from \"@reduxjs/toolkit\";\n\nconst registerRequest = createAction(\"auth/registerRequest\");\nconst registerSuccess = createAction(\"auth/registerSuccess\");\nconst registerError = createAction(\"auth/registerError\");\n\nconst loginRequest = createAction(\"auth/loginRequest\");\nconst loginSuccess = createAction(\"auth/loginSuccess\");\nconst loginError = createAction(\"auth/loginError\");\n\nconst logoutRequest = createAction(\"auth/logoutRequest\");\nconst logoutSuccess = createAction(\"auth/logoutSuccess\");\nconst logoutError = createAction(\"auth/logoutError\");\n\nconst getCurrentUserRequest = createAction(\"auth/getCurrentUserRequest\");\nconst getCurrentUserSuccess = createAction(\"auth/getCurrentUserSuccess\");\nconst getCurrentUserError = createAction(\"auth/getCurrentUserError\");\n\nexport default {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n};\n","import axios from \"axios\";\nimport authActions from \"./auth-actions\";\n\naxios.defaults.baseURL = \"https://goit-phonebook-api.herokuapp.com\";\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n\n  unset() {\n    axios.defaults.headers.common.Authorization = \"\";\n  },\n};\n\nconst register = (credentials) => async (dispatch) => {\n  dispatch(authActions.registerRequest());\n\n  try {\n    const response = await axios.post(\"/users/signup\", credentials);\n\n    token.set(response.data.token);\n\n    dispatch(authActions.registerSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.registerError(error.message));\n  }\n};\n\nconst logIn = (credentials) => async (dispatch) => {\n  dispatch(authActions.loginRequest);\n\n  try {\n    const response = await axios.post(\"/users/login\", credentials);\n\n    token.set(response.data.token);\n\n    dispatch(authActions.loginSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.loginError(error.message));\n  }\n};\n\nconst logOut = () => async (dispatch) => {\n  dispatch(authActions.logoutRequest);\n\n  try {\n    await axios.post(\"/users/logout\");\n\n    token.unset();\n\n    dispatch(authActions.logoutSuccess());\n  } catch (error) {\n    dispatch(authActions.logoutError(error.message));\n  }\n};\n\nconst getCurrentUser = () => async (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) {\n    return;\n  }\n\n  token.set(persistedToken);\n\n  dispatch(authActions.getCurrentUserRequest());\n\n  try {\n    const response = await axios.get(\"/users/current\");\n    dispatch(authActions.getCurrentUserSuccess(response.data));\n  } catch (error) {\n    dispatch(authActions.getCurrentUserError(error.message));\n  }\n};\n\nexport default { register, logIn, logOut, getCurrentUser };\n","import { combineReducers } from \"redux\";\nimport { createReducer } from \"@reduxjs/toolkit\";\nimport authActions from \"./auth-actions\";\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [authActions.registerSuccess]: (state, { payload }) => payload.user,\n  [authActions.loginSuccess]: (state, { payload }) => payload.user,\n  [authActions.logoutSuccess]: () => initialUserState,\n  [authActions.getCurrentUserSuccess]: (state, { payload }) => payload,\n});\n\nconst isAuthenticated = createReducer(false, {\n  [authActions.registerSuccess]: () => true,\n  [authActions.loginSuccess]: () => true,\n  [authActions.getCurrentUserSuccess]: () => true,\n  [authActions.registerError]: () => false,\n  [authActions.loginError]: () => false,\n  [authActions.getCurrentUserError]: () => false,\n  [authActions.logoutSuccess]: () => false,\n});\n\nconst token = createReducer(null, {\n  [authActions.registerSuccess]: (state, { payload }) => payload.token,\n  [authActions.loginSuccess]: (state, { payload }) => payload.token,\n  [authActions.logoutSuccess]: () => null,\n});\n\nconst setError = (state, { payload }) => payload;\nconst error = createReducer(null, {\n  [authActions.registerError]: setError,\n  [authActions.loginError]: setError,\n  [authActions.logoutError]: setError,\n  [authActions.getCurrentUserError]: setError,\n});\n\nexport default combineReducers({\n  user,\n  isAuthenticated,\n  token,\n  error,\n});\n","const getIsAuthenticated = (state) => state.auth.isAuthenticated;\n// const getIsAuthenticated = (state) => state.auth.token;\nconst getUserEmail = (state) => state.auth.user.email;\n\nexport default { getIsAuthenticated, getUserEmail };\n"],"sourceRoot":""}