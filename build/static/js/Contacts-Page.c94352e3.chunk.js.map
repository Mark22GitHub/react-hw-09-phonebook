{"version":3,"sources":["Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactList.module.css","Components/Filter/Filter.module.css","../node_modules/uuid/dist/esm-browser/rng.js","../node_modules/uuid/dist/esm-browser/regex.js","../node_modules/uuid/dist/esm-browser/stringify.js","../node_modules/uuid/dist/esm-browser/validate.js","../node_modules/uuid/dist/esm-browser/v4.js","Components/ContactForm/ContactForm.js","Components/ContactList/ContactList.js","Components/Filter/Filter.js","pages/contactsPage/ContactsPage.js"],"names":["module","exports","getRandomValues","rnds8","Uint8Array","rng","crypto","bind","msCrypto","Error","validate","uuid","REGEX","test","byteToHex","i","push","toString","substr","stringify","arr","offset","arguments","length","undefined","toLowerCase","TypeError","v4","options","buf","rnds","random","INITIAL_STATE","name","number","ContactForm","nameInputId","uuidv4","numberInputId","state","handleChange","evt","currentTarget","value","setState","handleSubmit","preventDefault","props","contacts","find","contact","alert","reset","onSubmit","className","styles","container","contactForm","this","label","htmlFor","input","type","onChange","id","placeholder","addContact","Component","connect","contactsSelectors","getAllContacts","dispatch","payload","contactsOperations","getVisibleContacts","onDeleteFromContacts","deleteFromContacts","map","ContactListItem","ContactsListText","ContactsListButton","onClick","getFilter","e","changeFilter","target","filter","ContactsPage","fetchContacts","isLoadingContacts","getLoadingContacts"],"mappings":"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","file":"static/js/Contacts-Page.c94352e3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__1I-Eb\",\"label\":\"ContactForm_label__2mfXY\",\"input\":\"ContactForm_input__3dHde\",\"addContact\":\"ContactForm_addContact__oiTcK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactList_container__3jXyL\",\"ContactListItem\":\"ContactList_ContactListItem__14o34\",\"ContactsListText\":\"ContactList_ContactsListText__2_Iht\",\"ContactsListButton\":\"ContactList_ContactsListButton__2wEPP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter\":\"Filter_filter__35l_Z\",\"input\":\"Filter_input__2CEsa\"};","// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nvar getRandomValues;\nvar rnds8 = new Uint8Array(16);\nexport default function rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation. Also,\n    // find the complete implementation of crypto (msCrypto) on IE11.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto) || typeof msCrypto !== 'undefined' && typeof msCrypto.getRandomValues === 'function' && msCrypto.getRandomValues.bind(msCrypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}","export default /^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;","import validate from './validate.js';\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nvar byteToHex = [];\n\nfor (var i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).substr(1));\n}\n\nfunction stringify(arr) {\n  var offset = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  var uuid = (byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]]).toLowerCase(); // Consistency check for valid UUID.  If this throws, it's likely due to one\n  // of the following:\n  // - One or more input array values don't map to a hex octet (leading to\n  // \"undefined\" in the uuid)\n  // - Invalid input values for the RFC `version` or `variant` fields\n\n  if (!validate(uuid)) {\n    throw TypeError('Stringified UUID is invalid');\n  }\n\n  return uuid;\n}\n\nexport default stringify;","import REGEX from './regex.js';\n\nfunction validate(uuid) {\n  return typeof uuid === 'string' && REGEX.test(uuid);\n}\n\nexport default validate;","import rng from './rng.js';\nimport stringify from './stringify.js';\n\nfunction v4(options, buf, offset) {\n  options = options || {};\n  var rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (var i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return stringify(rnds);\n}\n\nexport default v4;","import React, { Component } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\nimport styles from \"./ContactForm.module.css\";\nimport { connect } from \"react-redux\";\n\nimport { contactsOperations, contactsSelectors } from \"../../redux/contacts\";\n\nexport const INITIAL_STATE = {\n  name: \"\",\n  number: \"\",\n};\n\nclass ContactForm extends Component {\n  nameInputId = uuidv4();\n  numberInputId = uuidv4();\n\n  state = { ...INITIAL_STATE };\n\n  handleChange = (evt) => {\n    const { name, value } = evt.currentTarget;\n    this.setState({ [name]: value });\n  };\n\n  handleSubmit = (evt) => {\n    evt.preventDefault();\n\n    const { name } = this.state;\n    const { contacts } = this.props;\n\n    if (contacts.find((contact) => contact.name === name)) {\n      alert(`${name} is already in contacts`);\n      this.reset();\n      return;\n    } else {\n      this.props.onSubmit(this.state);\n      this.reset();\n    }\n  };\n\n  reset = () => {\n    this.setState({ ...INITIAL_STATE });\n  };\n\n  render() {\n    return (\n      <div className={styles.container}>\n        <form className={styles.contactForm} onSubmit={this.handleSubmit}>\n          <label className={styles.label} htmlFor={this.nameInputId}>\n            Name:\n            <input\n              className={styles.input}\n              type=\"text\"\n              name=\"name\"\n              value={this.state.name}\n              onChange={this.handleChange}\n              id={this.nameInputId}\n              placeholder=\"enter name\"\n            />\n          </label>\n\n          <label className={styles.label} htmlFor={this.numberInputId}>\n            Number:\n            <input\n              className={styles.input}\n              type=\"tel\"\n              name=\"number\"\n              value={this.state.number}\n              onChange={this.handleChange}\n              id={this.numberInputId}\n              placeholder=\"enter number\"\n            />\n          </label>\n\n          <button className={styles.addContact} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  contacts: contactsSelectors.getAllContacts(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onSubmit: (payload) => dispatch(contactsOperations.addContact(payload)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./ContactList.module.css\";\n\nimport { contactsOperations, contactsSelectors } from \"../../redux/contacts\";\n\nconst ContactList = ({ contacts, onDeleteFromContacts }) => {\n  return (\n    <div className={styles.container}>\n      <ul>\n        {contacts.map(({ id, name, number }) => (\n          <li key={id} className={styles.ContactListItem}>\n            <p className={styles.ContactsListText}>\n              {name} : {number}\n            </p>\n            <button\n              className={styles.ContactsListButton}\n              onClick={() => onDeleteFromContacts(id)}\n            >\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  contacts: contactsSelectors.getVisibleContacts(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDeleteFromContacts: (id) =>\n    dispatch(contactsOperations.deleteFromContacts(id)),\n});\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    })\n  ).isRequired,\n\n  onDeleteFromContacts: PropTypes.func,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport styles from \"./Filter.module.css\";\nimport { changeFilter } from \"../../redux/contacts/contacts-actions\";\nimport { contactsSelectors } from \"../../redux/contacts\";\n\nconst Filter = ({ value, onChange }) => {\n  return (\n    <>\n      <label className={styles.filter}>\n        Find contact by name\n        <input\n          className={styles.input}\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n        ></input>\n      </label>\n    </>\n  );\n};\n\nconst mapStateToProps = (state) => ({\n  value: contactsSelectors.getFilter(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChange: (e) => dispatch(changeFilter(e.target.value)),\n});\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport ContactForm from \"../../Components/ContactForm/\";\nimport ContactList from \"../../Components/ContactList/\";\nimport Filter from \"../../Components/Filter/\";\n\nimport { contactsOperations, contactsSelectors } from \"../../redux/contacts\";\n\n// =============================ContactsPage=============================================\nclass ContactsPage extends Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    return (\n      <div>\n        <h1>Phonebook</h1>\n        <ContactForm />\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n        {this.props.isLoadingContacts && <h1>Loading...</h1>}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  isLoadingContacts: contactsSelectors.getLoadingContacts(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  fetchContacts: () => dispatch(contactsOperations.fetchContacts()),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactsPage);\n"],"sourceRoot":""}